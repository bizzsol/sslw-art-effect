<?php
bolt_decrypt( __FILE__ , 'CFLw2m'); return 0;
##!!!##