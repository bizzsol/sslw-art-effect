<?php
bolt_decrypt( __FILE__ , 'aMlLl6'); return 0;
##!!!##