<?php
bolt_decrypt( __FILE__ , 'DMEYcY'); return 0;
##!!!##