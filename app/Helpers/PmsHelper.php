<?php
bolt_decrypt( __FILE__ , 'MgHP8g'); return 0;
##!!!##