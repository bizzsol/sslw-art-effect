<?php
bolt_decrypt( __FILE__ , 'q1YnQM'); return 0;
##!!!##