<?php
bolt_decrypt( __FILE__ , '1jiGKb'); return 0;
##!!!##