<?php
bolt_decrypt( __FILE__ , 'dgQS0L'); return 0;
##!!!##