<?php
bolt_decrypt( __FILE__ , 'kLOBo3'); return 0;
##!!!##