<?php
bolt_decrypt( __FILE__ , 'PNfROT'); return 0;
##!!!##