<?php
bolt_decrypt( __FILE__ , 'h1w8QO'); return 0;
##!!!##