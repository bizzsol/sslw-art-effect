<?php
bolt_decrypt( __FILE__ , 'x9zL3A'); return 0;
##!!!##