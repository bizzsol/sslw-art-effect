<?php
bolt_decrypt( __FILE__ , 'dXtAUA'); return 0;
##!!!##