<?php
bolt_decrypt( __FILE__ , '1TUtUU'); return 0;
##!!!##