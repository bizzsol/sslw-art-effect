<?php
bolt_decrypt( __FILE__ , 'DFIhmC'); return 0;
##!!!##