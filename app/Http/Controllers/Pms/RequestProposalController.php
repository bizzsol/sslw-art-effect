<?php
bolt_decrypt( __FILE__ , 'NCZzHZ'); return 0;
##!!!##