<?php
bolt_decrypt( __FILE__ , 'BVvPV6'); return 0;
##!!!##