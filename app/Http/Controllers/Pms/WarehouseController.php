<?php
bolt_decrypt( __FILE__ , 'ZX9KvT'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUG1zOwoKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXENvbnRyb2xsZXI7CnVzZSBBcHBcTW9kZWxzXFBtc01vZGVsc1xXYXJlaG91c2VzOwp1c2UgSWxsdW1pbmF0ZVxIdHRwXFJlcXVlc3Q7CgpjbGFzcyBXYXJlaG91c2VDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcgp7CiAgICAvKioKICAgICAqIERpc3BsYXkgYSBsaXN0aW5nIG9mIHRoZSByZXNvdXJjZS4KICAgICAqCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGluZGV4KCkKICAgIHsKICAgICAgICB0cnkgewogICAgICAgICAgICAkdGl0bGUgPSAnTG9jYXRpb24nOwogICAgICAgICAgICByZXR1cm4gdmlldygncG1zLmJhY2tlbmQucGFnZXMud2FyZWhvdXNlcy5pbmRleCcsIGNvbXBhY3QoJ3RpdGxlJykpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmJhY2tXaXRoRXJyb3IoJHRoLT5nZXRNZXNzYWdlKCkpOwogICAgICAgIH0KICAgIH0KCiAgICAvKioKICAgICAqIFNob3cgdGhlIGZvcm0gZm9yIGNyZWF0aW5nIGEgbmV3IHJlc291cmNlLgogICAgICoKICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gY3JlYXRlKCkKICAgIHsKICAgICAgICB0cnkgewogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICdzdGF0dXMnID0+ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICdpbmZvJyA9PiBXYXJlaG91c2VzOjphbGwoKQogICAgICAgICAgICBdOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbigkZGF0YSk7CiAgICAgICAgfWNhdGNoIChcVGhyb3dhYmxlICR0aCl7CiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgJ3N0YXR1cycgPT4gbnVsbCwKICAgICAgICAgICAgICAgICdpbmZvJyA9PiAkdGgtPmdldE1lc3NhZ2UoKQogICAgICAgICAgICBdOwogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbigkZGF0YSk7CiAgICAgICAgfQogICAgfQoKICAgIC8qKgogICAgICogU3RvcmUgYSBuZXdseSBjcmVhdGVkIHJlc291cmNlIGluIHN0b3JhZ2UuCiAgICAgKgogICAgICogQHBhcmFtICBcSWxsdW1pbmF0ZVxIdHRwXFJlcXVlc3QgICRyZXF1ZXN0CiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHN0b3JlKFJlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgJHdhcmVob3VzZSA9IFdhcmVob3VzZXM6OmNyZWF0ZSgkcmVxdWVzdC0+YWxsKCkpOwogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICdzdGF0dXMnID0+ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICdpbmZvJyA9PiBbJHdhcmVob3VzZV0KICAgICAgICAgICAgXTsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJGRhdGEpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICdzdGF0dXMnID0+IG51bGwsCiAgICAgICAgICAgICAgICAnaW5mbycgPT4gJHRoLT5nZXRNZXNzYWdlKCkKICAgICAgICAgICAgXTsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJGRhdGEpOwogICAgICAgIH0KICAgIH0KCiAgICAvKioKICAgICAqIERpc3BsYXkgdGhlIHNwZWNpZmllZCByZXNvdXJjZS4KICAgICAqCiAgICAgKiBAcGFyYW0gIGludCAgJGlkCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNob3coV2FyZWhvdXNlcyAkd2FyZWhvdXNlKQogICAgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgJ3N0YXR1cycgPT4gJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgJ2luZm8nID0+ICR3YXJlaG91c2UKICAgICAgICAgICAgXTsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJGRhdGEpOwogICAgICAgIH1jYXRjaCAoXFRocm93YWJsZSAkdGgpewogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICdzdGF0dXMnID0+IG51bGwsCiAgICAgICAgICAgICAgICAnaW5mbycgPT4gJHRoLT5nZXRNZXNzYWdlKCkKICAgICAgICAgICAgXTsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJGRhdGEpOwogICAgICAgIH0KICAgIH0KCiAgICAvKioKICAgICAqIFNob3cgdGhlIGZvcm0gZm9yIGVkaXRpbmcgdGhlIHNwZWNpZmllZCByZXNvdXJjZS4KICAgICAqCiAgICAgKiBAcGFyYW0gIGludCAgJGlkCiAgICAgKiBAcmV0dXJuIFxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGVkaXQoJGlkKQogICAgewogICAgICAgIC8vCiAgICB9CgogICAgLyoqCiAgICAgKiBVcGRhdGUgdGhlIHNwZWNpZmllZCByZXNvdXJjZSBpbiBzdG9yYWdlLgogICAgICoKICAgICAqIEBwYXJhbSAgXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0ICAkcmVxdWVzdAogICAgICogQHBhcmFtICBpbnQgICRpZAogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiB1cGRhdGUoUmVxdWVzdCAkcmVxdWVzdCwgV2FyZWhvdXNlcyAkd2FyZWhvdXNlKQogICAgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgICR3YXJlaG91c2UtPnVwZGF0ZSgkcmVxdWVzdC0+YWxsKCkpOwogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICdzdGF0dXMnID0+ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICdpbmZvJyA9PiAkd2FyZWhvdXNlCiAgICAgICAgICAgIF07CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKCRkYXRhKTsKICAgICAgICB9Y2F0Y2ggKFxUaHJvd2FibGUgJHRoKXsKICAgICAgICAgICAgJGRhdGEgPSBbCiAgICAgICAgICAgICAgICAnc3RhdHVzJyA9PiBudWxsLAogICAgICAgICAgICAgICAgJ2luZm8nID0+ICR0aC0+Z2V0TWVzc2FnZSgpCiAgICAgICAgICAgIF07CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKCRkYXRhKTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBSZW1vdmUgdGhlIHNwZWNpZmllZCByZXNvdXJjZSBmcm9tIHN0b3JhZ2UuCiAgICAgKgogICAgICogQHBhcmFtICBpbnQgICRpZAogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBkZXN0cm95KFdhcmVob3VzZXMgJHdhcmVob3VzZSkKICAgIHsKICAgICAgICB0cnkgewogICAgICAgICAgICAkd2FyZWhvdXNlLT5kZWxldGUoKTsKICAgICAgICB9Y2F0Y2ggKFxUaHJvd2FibGUgJHRoKXsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oJHRoLT5nZXRNZXNzYWdlKCkpOwogICAgICAgIH0KCiAgICB9Cn0K