<?php
bolt_decrypt( __FILE__ , '0OVXyb'); return 0;
##!!!##