<?php
bolt_decrypt( __FILE__ , 'HGpi2n'); return 0;
##!!!##