<?php
bolt_decrypt( __FILE__ , 'kAOBvU'); return 0;
##!!!##