<?php
bolt_decrypt( __FILE__ , 'J4izT6'); return 0;
##!!!##