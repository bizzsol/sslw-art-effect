<?php
bolt_decrypt( __FILE__ , 'P3OWek'); return 0;
##!!!##