<?php
bolt_decrypt( __FILE__ , 'oEF7wA'); return 0;
##!!!##