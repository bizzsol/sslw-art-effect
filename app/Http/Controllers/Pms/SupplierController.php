<?php
bolt_decrypt( __FILE__ , 'GNXjKF'); return 0;
##!!!##