<?php
bolt_decrypt( __FILE__ , 'Kh4pV5'); return 0;
##!!!##