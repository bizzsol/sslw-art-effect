<?php
bolt_decrypt( __FILE__ , 'u0EUpY'); return 0;
##!!!##