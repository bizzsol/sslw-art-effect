<?php
bolt_decrypt( __FILE__ , 'jUB7Ij'); return 0;
##!!!##