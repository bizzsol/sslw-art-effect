<?php
bolt_decrypt( __FILE__ , 'aiIkAH'); return 0;
##!!!##