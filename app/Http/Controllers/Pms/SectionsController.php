<?php
bolt_decrypt( __FILE__ , 'sBDLBd'); return 0;
##!!!##