<?php
bolt_decrypt( __FILE__ , 'CIrG9d'); return 0;
##!!!##