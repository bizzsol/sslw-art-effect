<?php
bolt_decrypt( __FILE__ , '6nnoXc'); return 0;
##!!!##