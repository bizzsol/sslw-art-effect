<?php
bolt_decrypt( __FILE__ , 'KVZe9n'); return 0;
##!!!##