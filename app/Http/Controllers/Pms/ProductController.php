<?php
bolt_decrypt( __FILE__ , 'LrwKDD'); return 0;
##!!!##