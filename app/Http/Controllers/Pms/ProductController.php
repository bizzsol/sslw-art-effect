<?php
bolt_decrypt( __FILE__ , 'JUqD5a'); return 0;
##!!!##