<?php
bolt_decrypt( __FILE__ , 'L1qOOV'); return 0;
##!!!##