<?php
bolt_decrypt( __FILE__ , 'AUO7ea'); return 0;
##!!!##