<?php
bolt_decrypt( __FILE__ , 'f8oK7S'); return 0;
##!!!##