<?php
bolt_decrypt( __FILE__ , '5AnqPF'); return 0;
##!!!##