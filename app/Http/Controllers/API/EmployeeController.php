<?php
bolt_decrypt( __FILE__ , '3HyFlR'); return 0;
##!!!##