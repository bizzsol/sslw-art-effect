<?php
bolt_decrypt( __FILE__ , 'CPFZBv'); return 0;
##!!!##