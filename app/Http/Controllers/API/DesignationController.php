<?php
bolt_decrypt( __FILE__ , 'XA2knG'); return 0;
##!!!##