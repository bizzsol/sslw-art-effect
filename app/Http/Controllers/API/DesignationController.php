<?php
bolt_decrypt( __FILE__ , '91Zyp5'); return 0;
##!!!##